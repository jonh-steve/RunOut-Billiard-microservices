#!/bin/bash

# -------------------------------------------
# ü©∑ Script kh·ªüi t·∫°o c·∫•u tr√∫c cho service si√™u d·ªÖ th∆∞∆°ng ü©∑
# T√°c gi·∫£: Anh y√™u d·ªÖ th∆∞∆°ng nh·∫•t qu·∫£ ƒë·∫•t
# -------------------------------------------

if [ -z "$1" ]; then
  echo "ü©∑ Anh y√™u d·ªÖ th∆∞∆°ng ∆°i, h√£y truy·ªÅn t√™n service v√†o nh√©! (v√≠ d·ª•: ./scripts/setup-service-structure.sh auth-service)"
  exit 1
fi

SERVICE_NAME=$1

echo "ü©∑ B·∫Øt ƒë·∫ßu t·∫°o c·∫•u tr√∫c cho $SERVICE_NAME si√™u d·ªÖ th∆∞∆°ng ü©∑"

# T·∫°o c√°c th∆∞ m·ª•c ch√≠nh
mkdir -p $SERVICE_NAME/src/controllers
mkdir -p $SERVICE_NAME/src/middleware
mkdir -p $SERVICE_NAME/src/models
mkdir -p $SERVICE_NAME/src/routes
mkdir -p $SERVICE_NAME/src/config

# T·∫°o file controllers/healthController.js
cat <<EOL > $SERVICE_NAME/src/controllers/healthController.js
// ü©∑ File: $SERVICE_NAME/src/controllers/healthController.js
exports.healthCheck = (req, res) => {
  res.status(200).json({ message: "Service $SERVICE_NAME is healthy! ü©∑" });
};
EOL

# T·∫°o file routes/healthRoutes.js
cat <<EOL > $SERVICE_NAME/src/routes/healthRoutes.js
// ü©∑ File: $SERVICE_NAME/src/routes/healthRoutes.js
const express = require('express');
const router = express.Router();
const { healthCheck } = require('../controllers/healthController');

router.get('/health', healthCheck);

module.exports = router;
EOL

# T·∫°o file config/db.js
cat <<EOL > $SERVICE_NAME/src/config/db.js
// ü©∑ File: $SERVICE_NAME/src/config/db.js
// K·∫øt n·ªëi database cho $SERVICE_NAME (anh y√™u d·ªÖ th∆∞∆°ng t·ª± ch·ªânh s·ª≠a nh√©)
EOL

# T·∫°o file config/jwt.js
cat <<EOL > $SERVICE_NAME/src/config/jwt.js
// ü©∑ File: $SERVICE_NAME/src/config/jwt.js
// C·∫•u h√¨nh JWT cho $SERVICE_NAME (anh y√™u d·ªÖ th∆∞∆°ng t·ª± ch·ªânh s·ª≠a nh√©)
EOL

# T·∫°o file config/cors.js
cat <<EOL > $SERVICE_NAME/src/config/cors.js
// ü©∑ File: $SERVICE_NAME/src/config/cors.js
// C·∫•u h√¨nh CORS cho $SERVICE_NAME (anh y√™u d·ªÖ th∆∞∆°ng t·ª± ch·ªânh s·ª≠a nh√©)
EOL

# T·∫°o file app.js
cat <<EOL > $SERVICE_NAME/src/app.js
// ü©∑ File: $SERVICE_NAME/src/app.js
const express = require('express');
const app = express();
const healthRoutes = require('./routes/healthRoutes');

app.use(express.json());
app.use('/api', healthRoutes);

module.exports = app;
EOL

# T·∫°o file index.js
cat <<EOL > $SERVICE_NAME/src/index.js
// ü©∑ File: $SERVICE_NAME/src/index.js
const app = require('./app');
const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
  console.log(\`ü©∑ $SERVICE_NAME ƒëang ch·∫°y tr√™n c·ªïng \${PORT} ü©∑\`);
});
EOL

# T·∫°o file .env
cat <<EOL > $SERVICE_NAME/.env
# ü©∑ File: $SERVICE_NAME/.env
PORT=3000
EOL

# T·∫°o file .env.example
cat <<EOL > $SERVICE_NAME/.env.example
# ü©∑ File: $SERVICE_NAME/.env.example
PORT=3000
EOL

# T·∫°o file package.json
cat <<EOL > $SERVICE_NAME/package.json
{
  "name": "$SERVICE_NAME",
  "version": "1.0.0",
  "description": "Service $SERVICE_NAME si√™u d·ªÖ th∆∞∆°ng cho anh y√™u",
  "main": "src/index.js",
  "scripts": {
    "start": "node src/index.js"
  },
  "dependencies": {
    "express": "^4.18.2"
  }
}
EOL

# T·∫°o file Dockerfile
cat <<EOL > $SERVICE_NAME/Dockerfile
# ü©∑ File: $SERVICE_NAME/Dockerfile
FROM node:18
WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install
COPY . .
EXPOSE 3000
CMD ["npm", "start"]
EOL

echo "ü©∑ ƒê√£ t·∫°o xong c·∫•u tr√∫c cho $SERVICE_NAME si√™u d·ªÖ th∆∞∆°ng! ü©∑"
echo "ü©∑ C√°c file v√† th∆∞ m·ª•c anh y√™u d·ªÖ th∆∞∆°ng c√≥ th·ªÉ s·ª≠a:"
echo "  - $SERVICE_NAME/src/controllers/healthController.js"
echo "  - $SERVICE_NAME/src/routes/healthRoutes.js"
echo "  - $SERVICE_NAME/src/config/db.js"
echo "  - $SERVICE_NAME/src/config/jwt.js"
echo "  - $SERVICE_NAME/src/config/cors.js"
echo "  - $SERVICE_NAME/src/app.js"
echo "  - $SERVICE_NAME/src/index.js"
echo "  - $SERVICE_NAME/.env"
echo "  - $SERVICE_NAME/.env.example"
echo "  - $SERVICE_NAME/package.json"
echo "  - $SERVICE_NAME/Dockerfile"
echo "ü©∑ Ch√∫c anh y√™u d·ªÖ th∆∞∆°ng code vui v·∫ª v√† th√†nh c√¥ng! ü©∑"